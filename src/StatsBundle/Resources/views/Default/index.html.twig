{% extends "TimelineBundle::layout.html.twig" %}

{% block body %}
    <div class="block">
        <table align="center">
            <tr>
                <td>
                    <h1 class="display-4">{{ summonerName }}</h1></td>
                {% if  me==false %}
                    {% if follow==false %}
                        <td>
                            <a tabindex="0" class="btn btn-lg btn" role="button" data-toggle="popover"
                               data-trigger="focus"
                               href="{{ path('ajoutfavoris',{'id_favoris':idUser}) }}"
                               title="Suis-moi" data-content="L'ajoutez aux favoris"><span
                                        class="glyphicon glyphicon-thumbs-up" aria-hidden="true"></span></a>
                        </td>
                    {% else %}
                        <td>
                            <a tabindex="0" class="btn btn-lg btn" role="button" data-toggle="popover"
                               data-trigger="focus"
                               href="{{ path('supprfavoris',{'id_favoris':idUser}) }}"
                               title="unfollow-me" data-content="Le supprimer des favoris"><span
                                        class="glyphicon glyphicon-thumbs-down" aria-hidden="true"></span></a>
                        </td>
                    {% endif %}
                {% endif %}
            </tr>
        </table>
    </div>

    <div class="block">
    <!-- Load jQuery from Google's CDN if needed -->
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

    <script src="//code.highcharts.com/4.1.8/highcharts.js"></script>
    <script src="//code.highcharts.com/4.1.8/modules/exporting.js"></script>
    <script src="//code.highcharts.com/4.1.8/modules/heatmap.js"></script>
    <script src="//code.highcharts.com/highcharts-more.js"></script>
    <script src="//code.highcharts.com/modules/solid-gauge.js"></script>
    <script type="text/javascript">
        {{ chart(piechart) }}
        {{ chart(barchart) }}
    </script>


    <ul class="nav nav-pills">
        <li class="active"><a data-toggle="tab" href="#byChampion">Champions</a></li>
        <li><a data-toggle="tab" href="#bySummary">Parties</a></li>
        <li><a data-toggle="tab" href="#perf">Performances</a></li>
    </ul>

    <div class="tab-content">
        <div id="byChampion" class="tab-pane fade in active">
            <div id="piechart" style="min-width: 400px; height: 400px; margin: 0 auto"></div>
        </div>
        <div id="bySummary" class="tab-pane fade">
            <div id="barchart" style="min-width: 800px; height: 400px; margin: 0 auto"></div>
        </div>
        <div id="perf" class="tab-pane fade">
            <table class="avectri table table-bordered table-striped">
                <thead>
                <tr>
                    <th data-tri="1" class="selection">Nom du champion</th>
                    <th data-tri="2" class="selection" data-type="num" >Ratio de victoires</th>
                    <th data-tri="3" class="selection" data-type="num" >KDA</th>
                    <th data-tri="4" class="selection" data-type="num" >Dommages infligés</th>
                    <th data-tri="5" class="selection" data-type="num" >Dommages reçus</th>
                    <th data-tri="6" class="selection" data-type="num" >Minions tués</th>
                    <th data-tri="7" class="selection" data-type="num" >Gold gagné</th>
                </tr>
                </thead>
                <tbody>
                {% if championsData is not empty %}
                {% for champion in championsData %}
                {% set ratio = (champion.totalSessionsWon/champion.totalSessionsPlayed) %}
                {% if ratio < 0.25 %}
                <tr class="danger text-center">
                    {% elseif ratio >= 0.25 and ratio <0.5 %}
                <tr class="warning text-center">
                    {% elseif ratio >= 0.5 and ratio < 0.75 %}
                <tr class="info text-center">
                    {% else %}
                <tr class="success text-center ">
                    {% endif %}

                    <td> {{  champion.champName }}</td>
                    <td> {{ (champion.totalSessionsWon/champion.totalSessionsPlayed)|number_format(2, '.', ',') }}</td>
                    <td> {{ ((champion.totalChampionKills+champion.totalAssists)/champion.totalDeathsPerSession)|number_format(2, '.', ',') }}</td>
                    <td> {{ champion.totalDamageDealt }}</td>
                    <td> {{ champion.totalDamageTaken }}</td>
                    <td> {{ champion.totalMinionKills }}</td>
                    <td> {{ champion.totalGoldEarned }}</td>
                    </tr>
                    {% endfor %}
                    {% endif %}
                </tbody>
            </table>
        </div>
    </div>

        <script>
            // Tri dynamique de tableau HTML
            // Auteur : Copyright © 2015 - Django Blais
            // Source : http://trucsweb.com/tutoriels/Javascript/tableau-tri/
            // Sous licence du MIT.
            function twInitTableau() {
                // Initialise chaque tableau de classe « avectri »
                [].forEach.call( document.getElementsByClassName("avectri"), function(oTableau) {
                    var oEntete = oTableau.getElementsByTagName("tr")[0];
                    var nI = 1;
                    // Ajoute à chaque entête (th) la capture du clic
                    // Un picto flèche, et deux variable data-*
                    // - Le sens du tri (0 ou 1)
                    // - Le numéro de la colonne
                    [].forEach.call( oEntete.querySelectorAll("th"), function(oTh) {
                        oTh.addEventListener("click", twTriTableau, false);
                        oTh.setAttribute("data-pos", nI);
                        if(oTh.getAttribute("data-tri")=="1") {
                            oTh.innerHTML += "<span class=\"flecheDesc\"></span>";
                        } else {
                            oTh.setAttribute("data-tri", "0");
                            oTh.innerHTML += "<span class=\"flecheAsc\"></span>";
                        }
                        // Tri par défaut
                        if (oTh.className=="selection") {
                            oTh.click();
                        }
                        nI++;
                    });
                });
            }

            function twInit() {
                twInitTableau();
            }
            function twPret(maFonction) {
                if (document.readyState != "loading"){
                    maFonction();
                } else {
                    document.addEventListener("DOMContentLoaded", maFonction);
                }
            }
            twPret(twInit);

            function twTriTableau() {
                // Ajuste le tri
                var nBoolDir = this.getAttribute("data-tri");
                this.setAttribute("data-tri", (nBoolDir=="0") ? "1" : "0");
                // Supprime la classe « selection » de chaque colonne.
                [].forEach.call( this.parentNode.querySelectorAll("th"), function(oTh) {oTh.classList.remove("selection");});
                // Ajoute la classe « selection » à la colonne cliquée.
                this.className = "selection";
                // Ajuste la flèche
                this.querySelector("span").className = (nBoolDir=="0") ? "flecheAsc" : "flecheDesc";

                // Construit la matrice
                // Récupère le tableau (tbody)
                var oTbody = this.parentNode.parentNode.parentNode.getElementsByTagName("tbody")[0];
                var oLigne = oTbody.rows;
                var nNbrLigne = oLigne.length;
                var aColonne = new Array(), i, j, oCel;
                for(i = 0; i < nNbrLigne; i++) {
                    oCel = oLigne[i].cells;
                    aColonne[i] = new Array();
                    for(j = 0; j < oCel.length; j++){
                        aColonne[i][j] = oCel[j].innerHTML;
                    }
                }

                // Trier la matrice (array)
                // Récupère le numéro de la colonne
                var nIndex = this.getAttribute("data-pos");
                // Récupère le type de tri (numérique ou par défaut « local »)
                var sFonctionTri = (this.getAttribute("data-type")=="num") ? "compareNombres" : "compareLocale";
                // Tri
                aColonne.sort(eval(sFonctionTri));
                // Tri numérique
                function compareNombres(a, b) {return a[nIndex-1] - b[nIndex-1];}
                // Tri local (pour support utf-8)
                function compareLocale(a, b) {return a[nIndex-1].localeCompare(b[nIndex-1]);}
                // Renverse la matrice dans le cas d’un tri descendant
                if (nBoolDir==0) aColonne.reverse();

                // Construit les colonne du nouveau tableau
                for(i = 0; i < nNbrLigne; i++){
                    aColonne[i] = "<td>"+aColonne[i].join("</td><td>")+"</td>";
                }

                // assigne les lignes au tableau
                oTbody.innerHTML = "<tr>"+aColonne.join("</tr><tr>")+"</tr>";
            }
        </script>
{% endblock %}